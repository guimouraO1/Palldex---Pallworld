// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$pallworld-primary: mat.define-palette(mat.$indigo-palette);
$pallworld-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$pallworld-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$pallworld-theme: mat.define-light-theme(
  (
    color: (
      primary: $pallworld-primary,
      accent: $pallworld-accent,
      warn: $pallworld-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($pallworld-theme);

:root {
  --primary: #495057;
  --background: #212529;
}
:root .light-theme {
  --primary: #495057;
  --background: #e9ecef;
}

body {
  margin: 0;
  background-color: var(--background);
}
p,
h1 {
  color: #495057;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}
